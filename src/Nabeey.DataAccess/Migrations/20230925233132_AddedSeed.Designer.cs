// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nabeey.DataAccess.Contexts;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Nabeey.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230925233132_AddedSeed")]
    partial class AddedSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Nabeey.Domain.Entities.Answers.Answer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AssetId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8574),
                            IsDeleted = false,
                            Text = "To'g'ri"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8576),
                            IsDeleted = false,
                            Text = "Noto'g'ri"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8577),
                            IsDeleted = false,
                            Text = "Ishonchli javob"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8578),
                            IsDeleted = false,
                            Text = "Noto'g'ri javob"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8578),
                            IsDeleted = false,
                            Text = "Ha"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8579),
                            IsDeleted = false,
                            Text = "Yo'q"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8579),
                            IsDeleted = false,
                            Text = "O'zgarmas"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8580),
                            IsDeleted = false,
                            Text = "Boshqa variant"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8581),
                            IsDeleted = false,
                            Text = "Tasdiqlandi"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8581),
                            IsDeleted = false,
                            Text = "Tasdiqlanmadi"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8582),
                            IsDeleted = false,
                            Text = "Yaxshi"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8582),
                            IsDeleted = false,
                            Text = "Yomon"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8583),
                            IsDeleted = false,
                            Text = "O'rniga"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8584),
                            IsDeleted = false,
                            Text = "Boshqa"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8584),
                            IsDeleted = false,
                            Text = "Ma'lum emas"
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8585),
                            IsDeleted = false,
                            Text = "Haqiqatan ham, to'g'ri"
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8585),
                            IsDeleted = false,
                            Text = "Yo'q, noto'g'ri"
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8586),
                            IsDeleted = false,
                            Text = "Aniqlanmagan"
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8587),
                            IsDeleted = false,
                            Text = "Ijtinob etish kerak"
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8587),
                            IsDeleted = false,
                            Text = "O'zgarmas, sabab ma'lum emas"
                        },
                        new
                        {
                            Id = 21L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8588),
                            IsDeleted = false,
                            Text = "To'g'ri, yomon"
                        },
                        new
                        {
                            Id = 22L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8588),
                            IsDeleted = false,
                            Text = "Yo'q, yaxshi emas"
                        },
                        new
                        {
                            Id = 23L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8589),
                            IsDeleted = false,
                            Text = "Aniqlanmagan, yomon"
                        },
                        new
                        {
                            Id = 24L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8590),
                            IsDeleted = false,
                            Text = "Boshqa variant"
                        },
                        new
                        {
                            Id = 25L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8590),
                            IsDeleted = false,
                            Text = "Tushunmadim"
                        });
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Articles.Article", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ContentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.HasIndex("ImageId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ContentId = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8707),
                            IsDeleted = false,
                            Text = "Bu birinchi maqola matni."
                        },
                        new
                        {
                            Id = 2L,
                            ContentId = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8708),
                            IsDeleted = false,
                            Text = "Ushbu maqolada muhim muddatlar haqida gaplashiladi."
                        },
                        new
                        {
                            Id = 3L,
                            ContentId = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8709),
                            IsDeleted = false,
                            Text = "Maqolada til to'g'risida muhim ma'lumotlar berilgan."
                        },
                        new
                        {
                            Id = 4L,
                            ContentId = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8710),
                            IsDeleted = false,
                            Text = "Bu dasturni o'rganish uchun yaxshi manba."
                        },
                        new
                        {
                            Id = 5L,
                            ContentId = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8710),
                            IsDeleted = false,
                            Text = "Maqola yozishning eng asosiy qoidalari."
                        },
                        new
                        {
                            Id = 6L,
                            ContentId = 3L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8711),
                            IsDeleted = false,
                            Text = "Bu esa test matni."
                        },
                        new
                        {
                            Id = 7L,
                            ContentId = 3L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8712),
                            IsDeleted = false,
                            Text = "Matn tahrirlovchilari uchun eng yaxshi darslik."
                        },
                        new
                        {
                            Id = 8L,
                            ContentId = 3L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8712),
                            IsDeleted = false,
                            Text = "Maqolada boshqa muhim ma'lumotlar."
                        },
                        new
                        {
                            Id = 9L,
                            ContentId = 4L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8713),
                            IsDeleted = false,
                            Text = "Yozilgan maqolaning tafsili."
                        },
                        new
                        {
                            Id = 10L,
                            ContentId = 4L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8714),
                            IsDeleted = false,
                            Text = "Tafsiliroq ma'lumotlar uchun yuqoridagi manbani o'qishingiz mumkin."
                        },
                        new
                        {
                            Id = 11L,
                            ContentId = 5L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8715),
                            IsDeleted = false,
                            Text = "Yangi maqola"
                        },
                        new
                        {
                            Id = 12L,
                            ContentId = 5L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8715),
                            IsDeleted = false,
                            Text = "Maqolani tashkil etish"
                        },
                        new
                        {
                            Id = 13L,
                            ContentId = 6L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8716),
                            IsDeleted = false,
                            Text = "So'nggi yangiliklar"
                        },
                        new
                        {
                            Id = 14L,
                            ContentId = 6L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8717),
                            IsDeleted = false,
                            Text = "Sport yangiliklari"
                        },
                        new
                        {
                            Id = 15L,
                            ContentId = 6L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8717),
                            IsDeleted = false,
                            Text = "Biznes yangiliklar"
                        });
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Articles.UserArticle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserArticles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ArticleId = 11L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8734),
                            IsDeleted = false,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            ArticleId = 11L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8735),
                            IsDeleted = false,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            ArticleId = 12L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8736),
                            IsDeleted = false,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            ArticleId = 13L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8737),
                            IsDeleted = false,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            ArticleId = 14L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8738),
                            IsDeleted = false,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 7L,
                            ArticleId = 11L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8738),
                            IsDeleted = false,
                            UserId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            ArticleId = 13L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8739),
                            IsDeleted = false,
                            UserId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            ArticleId = 14L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8740),
                            IsDeleted = false,
                            UserId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            ArticleId = 15L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8740),
                            IsDeleted = false,
                            UserId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            ArticleId = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8741),
                            IsDeleted = false,
                            UserId = 12L
                        });
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Assets.Asset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Books.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AssetId")
                        .HasColumnType("bigint");

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 3L,
                            Author = "George Orwell",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8135),
                            Description = "Dystopian novel",
                            IsDeleted = false,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 4L,
                            Author = "Harper Lee",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8141),
                            Description = "Classic novel",
                            IsDeleted = false,
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            Id = 5L,
                            Author = "F. Scott Fitzgerald",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8142),
                            Description = "American classic",
                            IsDeleted = false,
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            Id = 6L,
                            Author = "Jane Austen",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8143),
                            Description = "Romantic novel",
                            IsDeleted = false,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = 7L,
                            Author = "J.D. Salinger",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8144),
                            Description = "Coming-of-age novel",
                            IsDeleted = false,
                            Title = "The Catcher in the Rye"
                        },
                        new
                        {
                            Id = 8L,
                            Author = "J.R.R. Tolkien",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8145),
                            Description = "Epic fantasy",
                            IsDeleted = false,
                            Title = "Lord of the Rings"
                        },
                        new
                        {
                            Id = 9L,
                            Author = "J.K. Rowling",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8145),
                            Description = "Fantasy novel",
                            IsDeleted = false,
                            Title = "Harry Potter and the Sorcerer's Stone"
                        },
                        new
                        {
                            Id = 10L,
                            Author = "J.R.R. Tolkien",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8146),
                            Description = "Fantasy adventure",
                            IsDeleted = false,
                            Title = "The Hobbit"
                        },
                        new
                        {
                            Id = 11L,
                            Author = "Charles Dickens",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8147),
                            Description = "Roman klassikasi",
                            IsDeleted = false,
                            Title = "Oliver Twist"
                        },
                        new
                        {
                            Id = 12L,
                            Author = "Arthyr Konan Doil",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8148),
                            Description = "Mashhur detektiv qissalari",
                            IsDeleted = false,
                            Title = "Sherlok Holms"
                        },
                        new
                        {
                            Id = 13L,
                            Author = "Fyodor Dostoyevski",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8149),
                            Description = "Rus roman klassikasi",
                            IsDeleted = false,
                            Title = "Qo'shiqchi"
                        },
                        new
                        {
                            Id = 14L,
                            Author = "H. P. Lovecraft",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8150),
                            Description = "Fantastika",
                            IsDeleted = false,
                            Title = "Zulumotlar va qo'rqinlar vaqti"
                        },
                        new
                        {
                            Id = 15L,
                            Author = "Stephen King",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8150),
                            Description = "G'azablandiruvchi roman",
                            IsDeleted = false,
                            Title = "Qorquv"
                        },
                        new
                        {
                            Id = 16L,
                            Author = "Herman Melville",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8151),
                            Description = "Qayiq ko'prik qirg'ishi",
                            IsDeleted = false,
                            Title = "Mobi-Dik"
                        },
                        new
                        {
                            Id = 17L,
                            Author = "Munis Xo'ja",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8152),
                            Description = "Xalq qahramoni tarixiy roman",
                            IsDeleted = false,
                            Title = "Andijonlik"
                        },
                        new
                        {
                            Id = 18L,
                            Author = "Alexander Duma",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8153),
                            Description = "Maktab roman klassikasi",
                            IsDeleted = false,
                            Title = "Sulton Kuzo"
                        },
                        new
                        {
                            Id = 19L,
                            Author = "Edgar Allan Poe",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8154),
                            Description = "G'azallar",
                            IsDeleted = false,
                            Title = "Qo'rqinchli g'azal"
                        },
                        new
                        {
                            Id = 20L,
                            Author = "Ivan Denisovich",
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8155),
                            Description = "Olam shekillari roman",
                            IsDeleted = false,
                            Title = "Bir kunda"
                        });
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Contents.ContentBook", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("ContentId");

                    b.ToTable("ContentBooks");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Contexts.Content", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ContentCategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ContentCategoryId");

                    b.ToTable("Contents");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ContentCategoryId = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8687),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2L,
                            ContentCategoryId = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8689),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3L,
                            ContentCategoryId = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8689),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4L,
                            ContentCategoryId = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8690),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5L,
                            ContentCategoryId = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8691),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 6L,
                            ContentCategoryId = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8691),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Contexts.ContentAudio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AudioId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AudioId");

                    b.HasIndex("ContentId");

                    b.ToTable("ContentAudios");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Contexts.ContentCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ContentCategories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8402),
                            IsDeleted = false,
                            Name = "Darsliklar"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8405),
                            IsDeleted = false,
                            Name = "Romanlar"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8406),
                            IsDeleted = false,
                            Name = "Maqolalar"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8407),
                            IsDeleted = false,
                            Name = "She'rlar"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8407),
                            IsDeleted = false,
                            Name = "Tadbirlar"
                        });
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Contexts.ContentVideo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AssetId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("ContentId");

                    b.ToTable("ContentVideos");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.QuestionAnswers.QuestionAnswer", b =>
                {
                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<long>("AnswerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTrue")
                        .HasColumnType("boolean");

                    b.Property<long>("QuizId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("QuestionId", "AnswerId");

                    b.HasIndex("AnswerId");

                    b.HasIndex("QuizId");

                    b.HasIndex("UserId");

                    b.ToTable("QuestionAnswers");

                    b.HasData(
                        new
                        {
                            QuestionId = 1L,
                            AnswerId = 16L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8610),
                            Id = 1L,
                            IsDeleted = false,
                            IsTrue = true,
                            QuizId = 1L,
                            UserId = 1L
                        },
                        new
                        {
                            QuestionId = 2L,
                            AnswerId = 17L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8615),
                            Id = 2L,
                            IsDeleted = false,
                            IsTrue = false,
                            QuizId = 8L,
                            UserId = 2L
                        },
                        new
                        {
                            QuestionId = 3L,
                            AnswerId = 18L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8616),
                            Id = 3L,
                            IsDeleted = false,
                            IsTrue = false,
                            QuizId = 1L,
                            UserId = 3L
                        },
                        new
                        {
                            QuestionId = 4L,
                            AnswerId = 19L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8617),
                            Id = 4L,
                            IsDeleted = false,
                            IsTrue = true,
                            QuizId = 3L,
                            UserId = 4L
                        },
                        new
                        {
                            QuestionId = 5L,
                            AnswerId = 20L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8618),
                            Id = 5L,
                            IsDeleted = false,
                            IsTrue = false,
                            QuizId = 5L,
                            UserId = 5L
                        },
                        new
                        {
                            QuestionId = 6L,
                            AnswerId = 21L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8619),
                            Id = 6L,
                            IsDeleted = false,
                            IsTrue = false,
                            QuizId = 2L,
                            UserId = 1L
                        },
                        new
                        {
                            QuestionId = 7L,
                            AnswerId = 22L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8620),
                            Id = 7L,
                            IsDeleted = false,
                            IsTrue = true,
                            QuizId = 2L,
                            UserId = 2L
                        },
                        new
                        {
                            QuestionId = 8L,
                            AnswerId = 23L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8621),
                            Id = 8L,
                            IsDeleted = false,
                            IsTrue = false,
                            QuizId = 2L,
                            UserId = 3L
                        },
                        new
                        {
                            QuestionId = 9L,
                            AnswerId = 24L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8622),
                            Id = 9L,
                            IsDeleted = false,
                            IsTrue = false,
                            QuizId = 2L,
                            UserId = 4L
                        },
                        new
                        {
                            QuestionId = 10L,
                            AnswerId = 25L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8623),
                            Id = 10L,
                            IsDeleted = false,
                            IsTrue = true,
                            QuizId = 2L,
                            UserId = 5L
                        },
                        new
                        {
                            QuestionId = 1L,
                            AnswerId = 6L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8624),
                            Id = 11L,
                            IsDeleted = false,
                            IsTrue = true,
                            QuizId = 3L,
                            UserId = 7L
                        },
                        new
                        {
                            QuestionId = 2L,
                            AnswerId = 7L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8625),
                            Id = 12L,
                            IsDeleted = false,
                            IsTrue = false,
                            QuizId = 3L,
                            UserId = 7L
                        },
                        new
                        {
                            QuestionId = 3L,
                            AnswerId = 8L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8657),
                            Id = 13L,
                            IsDeleted = false,
                            IsTrue = false,
                            QuizId = 7L,
                            UserId = 8L
                        },
                        new
                        {
                            QuestionId = 4L,
                            AnswerId = 9L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8658),
                            Id = 14L,
                            IsDeleted = false,
                            IsTrue = true,
                            QuizId = 3L,
                            UserId = 9L
                        },
                        new
                        {
                            QuestionId = 5L,
                            AnswerId = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8659),
                            Id = 15L,
                            IsDeleted = false,
                            IsTrue = false,
                            QuizId = 3L,
                            UserId = 10L
                        },
                        new
                        {
                            QuestionId = 6L,
                            AnswerId = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8660),
                            Id = 16L,
                            IsDeleted = false,
                            IsTrue = false,
                            QuizId = 4L,
                            UserId = 8L
                        },
                        new
                        {
                            QuestionId = 7L,
                            AnswerId = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8661),
                            Id = 17L,
                            IsDeleted = false,
                            IsTrue = true,
                            QuizId = 4L,
                            UserId = 7L
                        },
                        new
                        {
                            QuestionId = 8L,
                            AnswerId = 3L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8662),
                            Id = 18L,
                            IsDeleted = false,
                            IsTrue = false,
                            QuizId = 4L,
                            UserId = 8L
                        },
                        new
                        {
                            QuestionId = 9L,
                            AnswerId = 4L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8663),
                            Id = 19L,
                            IsDeleted = false,
                            IsTrue = false,
                            QuizId = 4L,
                            UserId = 9L
                        },
                        new
                        {
                            QuestionId = 10L,
                            AnswerId = 5L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8664),
                            Id = 20L,
                            IsDeleted = false,
                            IsTrue = true,
                            QuizId = 4L,
                            UserId = 10L
                        });
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Questions.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AssetId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8481),
                            IsDeleted = false,
                            Text = "Islomning besh asosiy rukni nima?"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8482),
                            IsDeleted = false,
                            Text = "Islom ramzlari qaysi rangda?"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8483),
                            IsDeleted = false,
                            Text = "Quron necha juzda bo'lgan?"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8484),
                            IsDeleted = false,
                            Text = "Namoz qancha marta o'qiladi?"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8484),
                            IsDeleted = false,
                            Text = "Islomda o'qish qachon boshlanadi?"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8485),
                            IsDeleted = false,
                            Text = "Quron kim tomonidan o'qilgan?"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8486),
                            IsDeleted = false,
                            Text = "Islomning besh rukni nima?"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8486),
                            IsDeleted = false,
                            Text = "Namoz o'qish tartibi qanday?"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8487),
                            IsDeleted = false,
                            Text = "Namozni necha rakat o'qish kerak?"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8487),
                            IsDeleted = false,
                            Text = "Islomda qachon roza tutiladi?"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8488),
                            IsDeleted = false,
                            Text = "Muhammad (S.A.V.)ning tug'ilgan yili va kunlari nima edi?"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8489),
                            IsDeleted = false,
                            Text = "Muhammad (S.A.V.) qaysi oilada tug'ilgan edi?"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8489),
                            IsDeleted = false,
                            Text = "Muhammad (S.A.V.) qaysi kitobni o'qigan edilar?"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8490),
                            IsDeleted = false,
                            Text = "Muhammad (S.A.V.) hayotining boshlang'ich davri qanday o'tdi?"
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8491),
                            IsDeleted = false,
                            Text = "Muhammad (S.A.V.)ga nima chin qilindi?"
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8491),
                            IsDeleted = false,
                            Text = "Muhammad (S.A.V.) O'rtacha Vakillar kuni qanday o'tgan?"
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8492),
                            IsDeleted = false,
                            Text = "Muhammad (S.A.V.) qancha yillik bo'lganlarida peygambar bo'lishdi?"
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8493),
                            IsDeleted = false,
                            Text = "Muhammad (S.A.V.) qachon vafot etdi?"
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8493),
                            IsDeleted = false,
                            Text = "Muhammad (S.A.V.) nima yaratdi?"
                        });
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.QuizQuestions.QuizQuestion", b =>
                {
                    b.Property<long>("QuizId")
                        .HasColumnType("bigint");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("QuizId", "QuestionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuizQuestions");

                    b.HasData(
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8541),
                            Id = 1L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8543),
                            Id = 2L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 3L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8544),
                            Id = 3L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 4L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8545),
                            Id = 4L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 5L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8546),
                            Id = 5L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 6L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8547),
                            Id = 6L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 7L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8547),
                            Id = 7L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 8L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8548),
                            Id = 8L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 9L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8549),
                            Id = 9L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 10L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8549),
                            Id = 10L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 12L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8550),
                            Id = 12L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 13L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8551),
                            Id = 13L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 14L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8552),
                            Id = 14L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 15L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8552),
                            Id = 15L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 16L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8553),
                            Id = 16L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 17L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8554),
                            Id = 17L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 18L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8554),
                            Id = 18L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 19L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8555),
                            Id = 19L,
                            IsDeleted = false
                        },
                        new
                        {
                            QuizId = 1L,
                            QuestionId = 20L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8556),
                            Id = 20L,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Quizzes.Quiz", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ContentCategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("QuestionCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContentCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Quizzes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ContentCategoryId = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8424),
                            Description = "Matematika mavzusida umumiy test",
                            EndTime = new DateTime(2023, 9, 5, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Matematika Testi",
                            QuestionCount = 20,
                            StartTime = new DateTime(2023, 9, 5, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            ContentCategoryId = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8433),
                            Description = "Ingliz tili bilimlarini sinovlash testi",
                            EndTime = new DateTime(2023, 9, 6, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Ingliz Tilini Testlash",
                            QuestionCount = 15,
                            StartTime = new DateTime(2023, 9, 6, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            ContentCategoryId = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8435),
                            Description = "Fizika fanidan malakalaringizni sinovlash testi",
                            EndTime = new DateTime(2023, 9, 7, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Fizika Fan Testi",
                            QuestionCount = 25,
                            StartTime = new DateTime(2023, 9, 7, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            ContentCategoryId = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8436),
                            Description = "Tarixiy mavzuda topshiriq muhokama",
                            EndTime = new DateTime(2023, 9, 8, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Tarixiy Topshiriq",
                            QuestionCount = 10,
                            StartTime = new DateTime(2023, 9, 8, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            ContentCategoryId = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8438),
                            Description = "Kimyo fanidan malakalaringizni sinovlash testi",
                            EndTime = new DateTime(2023, 9, 9, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Kimyo Testi",
                            QuestionCount = 18,
                            StartTime = new DateTime(2023, 9, 9, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            ContentCategoryId = 3L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8439),
                            Description = "Biologya mavzusida topshiriq muhokama",
                            EndTime = new DateTime(2023, 9, 10, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Biologya Topshiriq",
                            QuestionCount = 12,
                            StartTime = new DateTime(2023, 9, 10, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            ContentCategoryId = 3L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8441),
                            Description = "Chet tillari bilimlarini sinovlash testi",
                            EndTime = new DateTime(2023, 9, 11, 10, 45, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Chet Tillari Sinovi",
                            QuestionCount = 22,
                            StartTime = new DateTime(2023, 9, 11, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 8L,
                            ContentCategoryId = 3L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8442),
                            Description = "Geografiya fanidan malakalaringizni sinovlash testi",
                            EndTime = new DateTime(2023, 9, 12, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Geografiya Fan Testi",
                            QuestionCount = 16,
                            StartTime = new DateTime(2023, 9, 12, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3L
                        },
                        new
                        {
                            Id = 9L,
                            ContentCategoryId = 4L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8445),
                            Description = "Informatika fanidan sinovlash testi",
                            EndTime = new DateTime(2023, 9, 13, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Informatika Sinovi",
                            QuestionCount = 20,
                            StartTime = new DateTime(2023, 9, 13, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4L
                        },
                        new
                        {
                            Id = 10L,
                            ContentCategoryId = 4L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8446),
                            Description = "Dunyo adabiyoti mavzusida sinovlash testi",
                            EndTime = new DateTime(2023, 9, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Dunyo Adabiyoti Testi",
                            QuestionCount = 15,
                            StartTime = new DateTime(2023, 9, 14, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5L
                        },
                        new
                        {
                            Id = 11L,
                            ContentCategoryId = 5L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8447),
                            Description = "Islom tarixi mavzusida sinovlash testi",
                            EndTime = new DateTime(2023, 9, 15, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Islom Tarixi",
                            QuestionCount = 20,
                            StartTime = new DateTime(2023, 9, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 12L,
                            ContentCategoryId = 5L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8449),
                            Description = "Quron tafsiri bo'yicha sinovlash testi",
                            EndTime = new DateTime(2023, 9, 16, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Quron Tafsiri",
                            QuestionCount = 15,
                            StartTime = new DateTime(2023, 9, 16, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 13L,
                            ContentCategoryId = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8450),
                            Description = "Namoz vaqtlari mavzusida sinovlash testi",
                            EndTime = new DateTime(2023, 9, 17, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Namoz Vaqtlari",
                            QuestionCount = 25,
                            StartTime = new DateTime(2023, 9, 17, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3L
                        },
                        new
                        {
                            Id = 14L,
                            ContentCategoryId = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8451),
                            Description = "Islom adabiyotidan test sinovlash testi",
                            EndTime = new DateTime(2023, 9, 18, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Islom Adablari",
                            QuestionCount = 10,
                            StartTime = new DateTime(2023, 9, 18, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4L
                        },
                        new
                        {
                            Id = 15L,
                            ContentCategoryId = 3L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8453),
                            Description = "Islom ahkomi bo'yicha sinovlash testi",
                            EndTime = new DateTime(2023, 9, 19, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Islom Ahkomi",
                            QuestionCount = 18,
                            StartTime = new DateTime(2023, 9, 19, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5L
                        },
                        new
                        {
                            Id = 16L,
                            ContentCategoryId = 5L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8454),
                            Description = "Ramazon oyida iftor va suhoq vaqtlari",
                            EndTime = new DateTime(2023, 9, 20, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Ramazon Vaqtlari",
                            QuestionCount = 12,
                            StartTime = new DateTime(2023, 9, 20, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 17L,
                            ContentCategoryId = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8456),
                            Description = "Islom falsafasi mavzusida sinovlash testi",
                            EndTime = new DateTime(2023, 9, 21, 10, 45, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Islom Falsafasi",
                            QuestionCount = 22,
                            StartTime = new DateTime(2023, 9, 21, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 18L,
                            ContentCategoryId = 3L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8457),
                            Description = "Islom hadislari va qissalari",
                            EndTime = new DateTime(2023, 9, 22, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Hadislar",
                            QuestionCount = 16,
                            StartTime = new DateTime(2023, 9, 22, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3L
                        },
                        new
                        {
                            Id = 19L,
                            ContentCategoryId = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8458),
                            Description = "Islom ma'rifati va ta'limi",
                            EndTime = new DateTime(2023, 9, 23, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Islom Ma'rifati",
                            QuestionCount = 20,
                            StartTime = new DateTime(2023, 9, 23, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4L
                        },
                        new
                        {
                            Id = 20L,
                            ContentCategoryId = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8460),
                            Description = "Islom ibadatlari va amaliyotlari",
                            EndTime = new DateTime(2023, 9, 24, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Islom Ibadatlari",
                            QuestionCount = 15,
                            StartTime = new DateTime(2023, 9, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5L
                        });
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AssetId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserRole")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8323),
                            Email = "imona.kabirova@example.com",
                            FirstName = "Imona",
                            IsDeleted = false,
                            LastName = "Kabirova",
                            PasswordHash = "a",
                            Phone = "9001234567",
                            UserRole = 1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8328),
                            Email = "jamshid.zayniev@example.com",
                            FirstName = "Jamshid",
                            IsDeleted = false,
                            LastName = "Zayniev",
                            PasswordHash = "a",
                            Phone = "9007654321",
                            UserRole = 1
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8329),
                            Email = "anastasiya.tomchuk@example.com",
                            FirstName = "Anastasiya",
                            IsDeleted = false,
                            LastName = "Tomchuk",
                            PasswordHash = "a",
                            Phone = "9009876543",
                            UserRole = 1
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8331),
                            Email = "iskandar.kodirov@example.com",
                            FirstName = "Iskandar",
                            IsDeleted = false,
                            LastName = "Kodirov",
                            PasswordHash = "a",
                            Phone = "9012345678",
                            UserRole = 1
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8373),
                            Email = "nodirshax.allanazarov@example.com",
                            FirstName = "Nodirshax",
                            IsDeleted = false,
                            LastName = "Allanazarov",
                            PasswordHash = "a",
                            Phone = "9012345679",
                            UserRole = 1
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8374),
                            Email = "asilbek.abdurashidov@example.com",
                            FirstName = "Asilbek",
                            IsDeleted = false,
                            LastName = "Abdurashidov",
                            PasswordHash = "a",
                            Phone = "9012345679",
                            UserRole = 1
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8375),
                            Email = "jasurbek.ergashev@example.com",
                            FirstName = "Jasurbek",
                            IsDeleted = false,
                            LastName = "Ergashev",
                            PasswordHash = "a",
                            Phone = "9012345680",
                            UserRole = 1
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8377),
                            Email = "takhmina.saidova@example.com",
                            FirstName = "Takhmina",
                            IsDeleted = false,
                            LastName = "Saidova",
                            PasswordHash = "a",
                            Phone = "9012345681",
                            UserRole = 1
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8378),
                            Email = "asadbek.qarshiyev@example.com",
                            FirstName = "Asadbek",
                            IsDeleted = false,
                            LastName = "Qarshiyev",
                            PasswordHash = "a",
                            Phone = "9012345682",
                            UserRole = 1
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8379),
                            Email = "sardor.sohinazarov@example.com",
                            FirstName = "Sardor",
                            IsDeleted = false,
                            LastName = "Sohinazarov",
                            PasswordHash = "a",
                            Phone = "9012345683",
                            UserRole = 1
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2023, 9, 25, 23, 31, 31, 729, DateTimeKind.Utc).AddTicks(8380),
                            Email = "raykhona.isroilova@example.com",
                            FirstName = "Raykhona",
                            IsDeleted = false,
                            LastName = "Isroilova",
                            PasswordHash = "a",
                            Phone = "9012345684",
                            UserRole = 1
                        });
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Answers.Answer", b =>
                {
                    b.HasOne("Nabeey.Domain.Entities.Assets.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Articles.Article", b =>
                {
                    b.HasOne("Nabeey.Domain.Entities.Contexts.Content", "Content")
                        .WithMany("Articles")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nabeey.Domain.Entities.Assets.Asset", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("Content");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Articles.UserArticle", b =>
                {
                    b.HasOne("Nabeey.Domain.Entities.Articles.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nabeey.Domain.Entities.Users.User", "User")
                        .WithMany("UserArticles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Books.Book", b =>
                {
                    b.HasOne("Nabeey.Domain.Entities.Assets.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Contents.ContentBook", b =>
                {
                    b.HasOne("Nabeey.Domain.Entities.Books.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nabeey.Domain.Entities.Contexts.Content", "Content")
                        .WithMany("Books")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Content");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Contexts.Content", b =>
                {
                    b.HasOne("Nabeey.Domain.Entities.Contexts.ContentCategory", "ContentCategory")
                        .WithMany("Contents")
                        .HasForeignKey("ContentCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentCategory");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Contexts.ContentAudio", b =>
                {
                    b.HasOne("Nabeey.Domain.Entities.Assets.Asset", "Audio")
                        .WithMany()
                        .HasForeignKey("AudioId");

                    b.HasOne("Nabeey.Domain.Entities.Contexts.Content", "Content")
                        .WithMany("Audios")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Audio");

                    b.Navigation("Content");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Contexts.ContentVideo", b =>
                {
                    b.HasOne("Nabeey.Domain.Entities.Assets.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId");

                    b.HasOne("Nabeey.Domain.Entities.Contexts.Content", "Content")
                        .WithMany("Videos")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Content");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.QuestionAnswers.QuestionAnswer", b =>
                {
                    b.HasOne("Nabeey.Domain.Entities.Answers.Answer", "Answer")
                        .WithMany("QuestionAnswers")
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nabeey.Domain.Entities.Questions.Question", "Question")
                        .WithMany("QuestionAnswers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nabeey.Domain.Entities.Quizzes.Quiz", "Quiz")
                        .WithMany()
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nabeey.Domain.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("Question");

                    b.Navigation("Quiz");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Questions.Question", b =>
                {
                    b.HasOne("Nabeey.Domain.Entities.Assets.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.QuizQuestions.QuizQuestion", b =>
                {
                    b.HasOne("Nabeey.Domain.Entities.Questions.Question", "Question")
                        .WithMany("QuizQuestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nabeey.Domain.Entities.Quizzes.Quiz", "Quiz")
                        .WithMany()
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Quizzes.Quiz", b =>
                {
                    b.HasOne("Nabeey.Domain.Entities.Contexts.ContentCategory", "ContentCategory")
                        .WithMany()
                        .HasForeignKey("ContentCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nabeey.Domain.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Users.User", b =>
                {
                    b.HasOne("Nabeey.Domain.Entities.Assets.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Answers.Answer", b =>
                {
                    b.Navigation("QuestionAnswers");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Contexts.Content", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Audios");

                    b.Navigation("Books");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Contexts.ContentCategory", b =>
                {
                    b.Navigation("Contents");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Questions.Question", b =>
                {
                    b.Navigation("QuestionAnswers");

                    b.Navigation("QuizQuestions");
                });

            modelBuilder.Entity("Nabeey.Domain.Entities.Users.User", b =>
                {
                    b.Navigation("UserArticles");
                });
#pragma warning restore 612, 618
        }
    }
}
